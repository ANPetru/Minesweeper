/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package minesweeper;

/**
 *
 * @author Alex
 */
public class LevelSelection extends javax.swing.JPanel {

    private MainGame game;

    /**
     * Creates new form LevelSelection
     */
    public LevelSelection() {
        initComponents();
    }

    public LevelSelection(MainGame game) {
        initComponents();
        this.game = game;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonStart = new javax.swing.JButton();
        jCheckBoxNormal = new javax.swing.JCheckBox();
        jCheckBoxEasy = new javax.swing.JCheckBox();
        jCheckBoxHard = new javax.swing.JCheckBox();

        jButtonStart.setText("Start");
        jButtonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartActionPerformed(evt);
            }
        });

        jCheckBoxNormal.setText("Normal");
        jCheckBoxNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxNormalActionPerformed(evt);
            }
        });

        jCheckBoxEasy.setText("Easy");
        jCheckBoxEasy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxEasyActionPerformed(evt);
            }
        });

        jCheckBoxHard.setText("Hard");
        jCheckBoxHard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxHardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jCheckBoxHard)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 140, Short.MAX_VALUE)
                        .addComponent(jButtonStart))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxEasy)
                            .addComponent(jCheckBoxNormal))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jCheckBoxEasy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonStart))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBoxNormal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBoxHard)
                        .addGap(0, 17, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartActionPerformed
        if (jCheckBoxEasy.isSelected()) {
            Config.getInstance().setLevel(0);
        } else if (jCheckBoxNormal.isSelected()) {
            Config.getInstance().setLevel(1);
        } else {
            Config.getInstance().setLevel(2);
        }
        Config.getInstance().save();
        game.startGame();

    }//GEN-LAST:event_jButtonStartActionPerformed

    private void jCheckBoxEasyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxEasyActionPerformed
        jCheckBoxHard.setSelected(false);
        jCheckBoxNormal.setSelected(false);
    }//GEN-LAST:event_jCheckBoxEasyActionPerformed

    private void jCheckBoxNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxNormalActionPerformed
        jCheckBoxHard.setSelected(false);
        jCheckBoxEasy.setSelected(false);
    }//GEN-LAST:event_jCheckBoxNormalActionPerformed

    private void jCheckBoxHardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxHardActionPerformed
        jCheckBoxNormal.setSelected(false);
        jCheckBoxEasy.setSelected(false);
    }//GEN-LAST:event_jCheckBoxHardActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonStart;
    private javax.swing.JCheckBox jCheckBoxEasy;
    private javax.swing.JCheckBox jCheckBoxHard;
    private javax.swing.JCheckBox jCheckBoxNormal;
    // End of variables declaration//GEN-END:variables
}
